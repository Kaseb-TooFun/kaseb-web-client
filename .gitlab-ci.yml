services:
  - docker:dind

cache:
  untracked: true
  key: "$CI_PROJECT_ID"
  paths:
   - node_modules/
    
stages:
  - build
  - package
  - tag
  - deploy

yarn-build:
  image: mhart/alpine-node:12
  stage: build
  script:
   - yarn install
   - yarn test
   - CI=false yarn build
  artifacts:
    paths:
      - build
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "chat"'


docker-build:
  stage: package
  script:
   - docker build -t registry.kaseb.xyz/kaseb/kaseb-web-client .
   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.kaseb.xyz
   - docker push registry.kaseb.xyz/kaseb/kaseb-web-client
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "chat"'

docker-tag:
  stage: tag
  script:
   - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.kaseb.xyz
   - docker pull registry.kaseb.xyz/kaseb/kaseb-web-client:latest
   - docker tag registry.kaseb.xyz/kaseb/kaseb-web-client:latest registry.kaseb.xyz/kaseb/kaseb-web-client:$CI_COMMIT_TAG
   - docker push registry.kaseb.xyz/kaseb/kaseb-web-client:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG

# nl-deploy:
#   stage: deploy
#   script:
#     - whoami
#     - sudo docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.kaseb.xyz
#     - sudo docker-compose -f /docker-compose.yml pull client
#     - sudo docker-compose -f /docker-compose.yml up -d
#   rules:
#     - if: $CI_COMMIT_TAG
#     - if: '$CI_PIPELINE_SOURCE == "web"'
#     - if: '$CI_PIPELINE_SOURCE == "chat"'
#   tags:
#     - mn1

arvan-deploy:
  stage: deploy
  script:
    - arvan paas scale deployment dev-client --replicas=0
    - arvan paas scale deployment dev-client --replicas=1
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "chat"'
  tags:
    - mn1

