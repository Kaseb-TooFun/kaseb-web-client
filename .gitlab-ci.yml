image: docker:19.03.13-dind
services:
  - docker:19.03.13-dind

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

cache:
  untracked: true
  key: "$CI_PROJECT_ID"
  paths:
   - node_modules/
    
stages:
  - build
  - package
  - tag
  - deploy

# yarn-build:
#   image: mhart/alpine-node:12
#   stage: build
#   script:
#    - yarn install
#    - yarn test
#    - CI=false yarn build
#   artifacts:
#     paths:
#       - build
#   rules:
#     - if: $CI_COMMIT_TAG
#     - if: '$CI_PIPELINE_SOURCE == "web"'
#     - if: '$CI_PIPELINE_SOURCE == "chat"'


# docker-build:
#   stage: package
#   script:
#    - docker build -t registry.kaseb.xyz/kaseb/kaseb-web-client .
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.kaseb.xyz
#    - docker push registry.kaseb.xyz/kaseb/kaseb-web-client
#   rules:
#     - if: $CI_COMMIT_TAG
#     - if: '$CI_PIPELINE_SOURCE == "web"'
#     - if: '$CI_PIPELINE_SOURCE == "chat"'

# docker-tag:
#   stage: tag
#   script:
#    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.kaseb.xyz
#    - docker pull registry.kaseb.xyz/kaseb/kaseb-web-client:latest
#    - docker tag registry.kaseb.xyz/kaseb/kaseb-web-client:latest registry.kaseb.xyz/kaseb/kaseb-web-client:$CI_COMMIT_TAG
#    - docker push registry.kaseb.xyz/kaseb/kaseb-web-client:$CI_COMMIT_TAG
#   rules:
#     - if: $CI_COMMIT_TAG

# production-deploy:
#   stage: deploy
#   script:
#     - ls
#   rules:
#     - if: $CI_COMMIT_TAG
#     - if: '$CI_PIPELINE_SOURCE == "chat"'

staging-deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  script:
    - kubectl -n staging rollout restart deploy dev-client
  rules:
    - if: $CI_COMMIT_TAG
    - if: '$CI_PIPELINE_SOURCE == "web"'
    - if: '$CI_PIPELINE_SOURCE == "chat"'

